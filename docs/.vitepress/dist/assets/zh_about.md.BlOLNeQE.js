import{_ as t,c as i,o as s,ae as a}from"./chunks/framework.CBTkueSR.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"page","sidebar":false,"outline":false,"docFooter":{"prev":false,"next":false}},"headers":[],"relativePath":"zh/about.md","filePath":"zh/about.md"}'),n={name:"zh/about.md"};function o(l,e,d,c,r,m){return s(),i("div",null,[...e[0]||(e[0]=[a('<div class="timeline-section"><h2>🛠️ 实现路线</h2><div class="timeline"><div class="timeline-item"><div class="timeline-content"><h3>1. Fork 官方仓库</h3><p>复刻 <a href="https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools" target="_blank">官方仓库</a> 到个人账户，建立二次开发的基础。</p></div></div><div class="timeline-item"><div class="timeline-content"><h3>2. 转换文档格式</h3><p>使用 <code>scripts</code> 目录下的自定义脚本，将源文件批量转换为统一的 Markdown 格式，并生成zh和en两个文档文件夹。</p></div></div><div class="timeline-item"><div class="timeline-content"><h3>3. 翻译与汉化</h3><p>对生成的 Markdown 文档进行翻译和校对，完成汉化，为后续的双语网站做准备。</p></div></div><div class="timeline-item"><div class="timeline-content"><h3>4. 构建文档网站</h3><p>基于 VitePress 搭建双语静态网站，并进行深度定制，包括主题、导航、主页布局。</p></div></div><div class="timeline-item"><div class="timeline-content"><h3>5. 配置自动同步</h3><p>配置 GitHub Action 自动检测上游仓库的更新，并生成直观的更新报告以供审阅和手动同步。</p></div></div></div></div><div style="max-width:800px;margin:60px auto;text-align:center;"><p style="font-size:1.1em;line-height:1.7;color:var(--vp-c-text-2);"> 在原项目的基础上，我利用 <strong>VitePress</strong> 技术栈将其完全重构为一个现代化的静态文档网站，旨在提供更佳的浏览和阅读体验。使用 `scripts` 目录下的自定义脚本，将源文件批量转换为统一的 Markdown 格式，并生成zh和en两个文档文件夹。对生成的 Markdown 文档进行翻译和校对，完成汉化，为后续的双语网站做准备。基于 VitePress 搭建双语静态网站，并进行深度定制，包括主题、导航、主页布局等。但因为大部分翻译转化都是基于ai完成的，所以部分翻译可能存在错误，如果有疑问还是建议直接查看原仓库的内容。 </p></div>',2)])])}const h=t(n,[["render",o]]);export{v as __pageData,h as default};
