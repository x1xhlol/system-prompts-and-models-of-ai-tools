import{_ as o,c as d,o as t,ae as a}from"./chunks/framework.CBTkueSR.js";const m=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/codebuddy-prompts/index.md","filePath":"zh/codebuddy-prompts/index.md","lastUpdated":1760450691000}'),r={name:"zh/codebuddy-prompts/index.md"};function c(i,e,l,p,n,s){return t(),d("div",null,[...e[0]||(e[0]=[a('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./Chat Prompt.html">Chat Prompt</a></li><li><a href="./Craft Prompt.html">Craft Prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录包含了为AI编程助手 &quot;CodeBuddy&quot; 设计的两种不同操作模式的系统提示。CodeBuddy被定位为一名技能高超的软件工程师，旨在帮助用户完成编码任务。</p><ul><li><p><strong><code>Chat Prompt.md</code> (聊天模式)</strong>: 此提示定义了CodeBuddy在“聊天模式”下的行为。在此模式下，助手的核心任务是与用户进行自然对话，回答问题、提供解释并讨论想法。它使用<code>chat_mode_respond</code>工具直接与用户沟通，重点在于信息收集和与用户共同制定计划，而不是立即执行代码。</p></li><li><p><strong><code>Craft Prompt.md</code> (创作模式)</strong>: 此提示定义了CodeBuddy在“创作模式”下的行为。在此模式下，助手将扮演执行者的角色，使用一套基于XML风格标签的丰富工具集来完成具体的开发任务。这些工具包括文件操作（<code>read_file</code>, <code>write_to_file</code>, <code>replace_in_file</code>）、命令执行（<code>execute_command</code>）、代码库搜索（<code>search_files</code>）以及与外部MCP服务器交互的能力。此模式强调迭代式地、一步步地完成任务，并在每次操作后等待用户确认。</p></li></ul><p>总而言之，<code>codebuddy-prompts</code>通过这两种模式的切换（由用户手动触发），构建了一个从“规划讨论”到“动手实现”的完整开发工作流，使用户能够与AI助手进行高效协作。</p>',6)])])}const h=o(r,[["render",c]]);export{m as __pageData,h as default};
