import{_ as o,c as t,o as a,ae as n}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"Codex CLI","description":"","frontmatter":{},"headers":[],"relativePath":"en/open-source-prompts/Codex CLI/index.md","filePath":"en/open-source-prompts/Codex CLI/index.md"}'),s={name:"en/open-source-prompts/Codex CLI/index.md"};function i(r,e,c,d,l,p){return a(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="codex-cli" tabindex="-1">Codex CLI <a class="header-anchor" href="#codex-cli" aria-label="Permalink to &quot;Codex CLI&quot;">​</a></h1><ul><li><a href="./openai-codex-cli-system-prompt-20250820.html">openai-codex-cli-system-prompt-20250820</a></li><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="summary-of-product-tool-documents" tabindex="-1">Summary of Product Tool Documents <a class="header-anchor" href="#summary-of-product-tool-documents" aria-label="Permalink to &quot;Summary of Product Tool Documents&quot;">​</a></h2><p>This directory contains system prompts designed for &quot;Codex CLI&quot;, an OpenAI-led, terminal-based open-source agent coding assistant. This assistant aims to help users complete local codebase development tasks through natural language interaction.</p><ul><li><strong><code>Prompt.md</code> (Old Version)</strong> and <strong><code>openai-codex-cli-system-prompt-20250820.md</code> (New Version)</strong>: Both files are core system prompts for Codex CLI, defining its identity, personality, and code of conduct. The new version is more detailed, specifying the agent&#39;s requirements in terms of responsiveness (leading messages), task planning (<code>update_plan</code> tool), task execution, code testing, and approval processes (sandbox mechanism). Both versions emphasize applying code changes as patches via the <code>apply_patch</code> tool and adhering to strict coding and communication guidelines.</li></ul><p>In summary, these documents collectively depict a precise, secure, and efficient command-line AI agent. It autonomously completes software engineering tasks in the user&#39;s local terminal environment through a structured workflow (planning, execution, testing) and a specific toolset (especially <code>apply_patch</code> and <code>update_plan</code>).</p>',6)])])}const h=o(s,[["render",i]]);export{u as __pageData,h as default};
