import{_ as a,c as t,o,ae as d}from"./chunks/framework.CBTkueSR.js";const m=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/warpdev/index.md","filePath":"zh/warpdev/index.md","lastUpdated":1760450691000}'),r={name:"zh/warpdev/index.md"};function n(i,e,c,l,s,_){return o(),t("div",null,[...e[0]||(e[0]=[d('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录下的文档定义了 &quot;Agent Mode&quot; 的核心规范，这是一个在 Warp（一个AI终端）内部运行的AI代理。其主要目的是通过终端界面协助用户解决软件开发问题和任务。<code>Prompt.md</code> 文件详细阐述了该代理的行为准则，包括如何区分问题与任务、处理不同复杂度的指令、使用外部上下文以及与各种工具（如 <code>run_command</code>, <code>read_files</code>, <code>edit_files</code>）的交互规则。此外，该文档还规定了编码、版本控制、安全（处理秘密）和输出格式等方面的最佳实践，构成了 &quot;Agent Mode&quot; 完整的功能和操作指南。</p>',4)])])}const h=a(r,[["render",n]]);export{m as __pageData,h as default};
