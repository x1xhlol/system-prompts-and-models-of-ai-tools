import{_ as t,c as o,o as i,ae as s}from"./chunks/framework.CBTkueSR.js";const h=JSON.parse('{"title":"Orchids.app","description":"","frontmatter":{},"headers":[],"relativePath":"en/orchidsapp/index.md","filePath":"en/orchidsapp/index.md","lastUpdated":1760450691000}'),a={name:"en/orchidsapp/index.md"};function n(r,e,d,c,p,l){return i(),o("div",null,[...e[0]||(e[0]=[s('<h1 id="orchids-app" tabindex="-1">Orchids.app <a class="header-anchor" href="#orchids-app" aria-label="Permalink to &quot;Orchids.app&quot;">​</a></h1><ul><li><a href="./Decision-making prompt.html">Decision-making prompt</a></li><li><a href="./System Prompt.html">System Prompt</a></li></ul><h2 id="summary-of-product-tool-documents" tabindex="-1">Summary of Product Tool Documents <a class="header-anchor" href="#summary-of-product-tool-documents" aria-label="Permalink to &quot;Summary of Product Tool Documents&quot;">​</a></h2><p>This directory defines the core workflow and code of conduct for the AI coding assistant &quot;Orchids&quot;. Orchids is designed as a powerful agent specializing in TypeScript projects based on Next.js 15 and Shadcn/UI. Its workflow is divided into two main stages, guided by different prompt files:</p><ul><li><p><strong><code>Decision-making prompt.md</code></strong>: This file defines Orchids&#39; &quot;Decision and Design&quot; phase. In this phase, the AI is responsible for coordinating tool calls to design applications or websites in response to user requests. It contains a decision tree to determine whether to clone an existing website (<code>clone_website</code> tool) or generate a design system from scratch (<code>generate_design_system</code> tool). After completing the design, it hands off the task to the coding agent via the <code>handoff_to_coding_agent</code> tool.</p></li><li><p><strong><code>System Prompt.md</code></strong>: This is the core system prompt for the &quot;Coding Agent&quot;. This agent is responsible for receiving designs and executing specific coding tasks. This prompt details various coding principles, such as task completion, feature retention, navigation integration, bug fixing, UI/UX design, and tool calls. It particularly emphasizes code editing format requirements (<code>edit_file_format_requirements</code>), parallel tool call strategies, and how to use specialized sub-agents (e.g., <code>use_database_agent</code>, <code>use_auth_agent</code>) to handle complex functions like databases, authentication, and payments.</p></li></ul><p>In summary, <code>orchidsapp</code>, through this two-stage approach of separating design and coding, builds a clearly structured and well-defined AI development process, aiming to efficiently translate user requirements from abstract design concepts into concrete, high-quality code implementations.</p>',6)])])}const u=t(a,[["render",n]]);export{h as __pageData,u as default};
