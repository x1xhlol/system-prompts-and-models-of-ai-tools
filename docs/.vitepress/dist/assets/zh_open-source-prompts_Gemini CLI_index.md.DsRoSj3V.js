import{_ as o,c as t,o as a,ae as i}from"./chunks/framework.CBTkueSR.js";const _=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/open-source-prompts/Gemini CLI/index.md","filePath":"zh/open-source-prompts/Gemini CLI/index.md","lastUpdated":1760450691000}'),r={name:"zh/open-source-prompts/Gemini CLI/index.md"};function n(s,e,c,d,l,m){return a(),t("div",null,[...e[0]||(e[0]=[i('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./google-gemini-cli-system-prompt.html">google-gemini-cli-system-prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录下的 <code>google-gemini-cli-system-prompt.md</code> 文件为一款由Gemini驱动、专门从事软件工程任务的交互式CLI代理定义了核心系统提示。该提示详细规定了代理在执行修复Bug、添加功能、重构代码等任务时必须遵守的核心指令和工作流程。它强调了严格遵守项目约定、模仿现有代码风格、通过工具（如<code>search_file_content</code>, <code>read_file</code>, <code>run_shell_command</code>）进行理解、规划、实施和验证的重要性。此外，该文档还为代理自主实现新应用程序提供了从需求理解到原型交付的完整工作流程，并对代理的沟通语气、安全规则和工具使用（特别是路径构建和命令执行）等方面提出了明确的操作指南。</p>',4)])])}const h=o(r,[["render",n]]);export{_ as __pageData,h as default};
