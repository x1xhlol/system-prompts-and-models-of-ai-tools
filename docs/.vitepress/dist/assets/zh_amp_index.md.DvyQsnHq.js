import{_ as e,c as s,o as t,ae as i}from"./chunks/framework.CBTkueSR.js";const o="/assets/view-thread-yaml.Bu7VY5Z2.png",u=JSON.parse('{"title":"Amp (中文)","description":"","frontmatter":{},"headers":[],"relativePath":"zh/amp/index.md","filePath":"zh/amp/index.md"}'),n={name:"zh/amp/index.md"};function p(l,a,d,r,c,h){return t(),s("div",null,[...a[0]||(a[0]=[i('<h1 id="amp-中文" tabindex="-1">Amp (中文) <a class="header-anchor" href="#amp-中文" aria-label="Permalink to &quot;Amp (中文)&quot;">​</a></h1><h1 id="如何获取-amp-的系统提示词" tabindex="-1">如何获取 <a href="https://ampcode.com" target="_blank" rel="noreferrer">Amp</a> 的系统提示词 <a class="header-anchor" href="#如何获取-amp-的系统提示词" aria-label="Permalink to &quot;如何获取 [Amp](https://ampcode.com) 的系统提示词&quot;">​</a></h1><ol><li>使用 VScode 登录 Amp</li><li>向 Amp 发送一个简短的查询</li><li>按住 Alt (Windows) 或 Option (macOS) 并点击工作区按钮</li></ol><p><img src="'+o+`" alt=""></p><ol start="4"><li>点击查看线程 YAML</li></ol><h1 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h1><p>Amp 使用的系统提示词针对 Sonnet 4.x 进行了调优，并将其他 LLM 注册为工具（&quot;oracle&quot;）。要获取针对 <code>GPT-5</code> 调优的系统提示词，需要在 VSCode 用户设置中配置以下内容，然后再次按照上述步骤操作：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;amp.url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://ampcode.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;amp.gpt5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录包含了为AI编码代理 &quot;Amp&quot; 设计的系统提示。Amp由Sourcegraph构建，旨在帮助用户完成软件工程任务。该目录下的文件展示了Amp如何针对不同的底层大语言模型进行配置和优化。</p><ul><li><p><strong><code>claude-4-sonnet.md</code></strong>: 这是为Amp配置的、针对Anthropic的Claude Sonnet 4模型的系统提示。它详细定义了Amp的代理行为、任务管理（<code>todo_write</code>工具）、代码约定和沟通风格。一个核心特性是频繁使用<code>oracle</code>工具，这是一个由其他LLM（如此处的GPT-5）扮演的专家顾问，用于在规划、审查和调试复杂任务时提供指导。</p></li><li><p><strong><code>gpt-5.md</code></strong>: 这是为Amp配置的、针对OpenAI的GPT-5模型的系统提示。此版本同样定义了Amp的代理行为，但更强调并行执行策略（<code>Parallel Execution Policy</code>）、快速上下文理解和严格的护栏（Guardrails）规则。它也提到了使用<code>oracle</code>（此处可能由Claude Sonnet 4扮演）和其他子代理（<code>Task</code>, <code>Codebase Search</code>）来协同完成任务。</p></li></ul><p>总而言之，<code>amp</code>目录通过为不同的LLM提供定制化的系统提示，展示了一种灵活的、多模型协作的AI代理架构。它利用一个主模型（如Claude Sonnet 4）来执行任务，同时将另一个强大的模型（如GPT-5）作为“神谕”（oracle）工具来提供专家建议，从而实现更强大和可靠的编程辅助能力。</p>`,12)])])}const k=e(n,[["render",p]]);export{u as __pageData,k as default};
