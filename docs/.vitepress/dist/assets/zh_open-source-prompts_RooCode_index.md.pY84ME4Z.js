import{_ as o,c as a,o as t,ae as d}from"./chunks/framework.CBTkueSR.js";const m=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/open-source-prompts/RooCode/index.md","filePath":"zh/open-source-prompts/RooCode/index.md","lastUpdated":1760450691000}'),r={name:"zh/open-source-prompts/RooCode/index.md"};function c(i,e,n,s,l,p){return t(),a("div",null,[...e[0]||(e[0]=[d('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录下的 <code>Prompt.md</code> 文件为名为 &quot;Roo&quot; 的AI助手定义了核心系统提示。Roo被定位为一名高级软件工程师，专注于以最少的代码改动来完成任务，并注重可维护性。该提示详细规定了Roo如何通过一套基于XML风格标签的工具集与用户交互，以分步、迭代的方式完成编码任务。这些工具包括文件操作（<code>read_file</code>, <code>write_to_file</code>, <code>apply_diff</code>）、命令执行（<code>execute_command</code>）、代码库搜索（<code>search_files</code>）以及与外部MCP服务器交互的能力。与Cline类似，该文档也强调了在每次工具调用后等待用户确认，并根据结果调整后续步骤的迭代式工作流程。</p>',4)])])}const h=o(r,[["render",c]]);export{m as __pageData,h as default};
