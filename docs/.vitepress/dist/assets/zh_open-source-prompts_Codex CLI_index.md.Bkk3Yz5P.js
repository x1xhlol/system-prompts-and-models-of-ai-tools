import{_ as o,c as t,o as a,ae as p}from"./chunks/framework.CBTkueSR.js";const _=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/open-source-prompts/Codex CLI/index.md","filePath":"zh/open-source-prompts/Codex CLI/index.md"}'),r={name:"zh/open-source-prompts/Codex CLI/index.md"};function d(c,e,n,s,l,i){return a(),t("div",null,[...e[0]||(e[0]=[p('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./openai-codex-cli-system-prompt-20250820.html">openai-codex-cli-system-prompt-20250820</a></li><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录包含了为 &quot;Codex CLI&quot; 设计的系统提示，这是一个由OpenAI主导的、基于终端的开源代理编码助手。该助手旨在通过自然语言交互的方式，帮助用户完成本地代码库的开发任务。</p><ul><li><strong><code>Prompt.md</code> (旧版)</strong> 和 <strong><code>openai-codex-cli-system-prompt-20250820.md</code> (新版)</strong>: 这两个文件都是Codex CLI的核心系统提示，定义了其身份、个性和行为准则。新版提示更加详细，它规定了代理在响应性（前导消息）、任务规划（<code>update_plan</code>工具）、任务执行、代码测试和审批流程（沙盒机制）等方面的具体要求。两个版本都强调了通过<code>apply_patch</code>工具以补丁形式应用代码更改，并遵循严格的编码和沟通指南。</li></ul><p>总而言之，这些文档共同描绘了一个精确、安全且高效的命令行AI代理。它通过结构化的工作流程（规划、执行、测试）和特定的工具集（特别是<code>apply_patch</code>和<code>update_plan</code>），在用户的本地终端环境中自主地完成软件工程任务。</p>',6)])])}const h=o(r,[["render",d]]);export{_ as __pageData,h as default};
