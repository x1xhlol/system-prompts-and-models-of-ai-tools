import{_ as o,c as t,o as n,ae as i}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"Devin AI","description":"","frontmatter":{},"headers":[],"relativePath":"en/devin-ai/index.md","filePath":"en/devin-ai/index.md","lastUpdated":1760450691000}'),a={name:"en/devin-ai/index.md"};function r(s,e,d,c,l,m){return n(),t("div",null,[...e[0]||(e[0]=[i('<h1 id="devin-ai" tabindex="-1">Devin AI <a class="header-anchor" href="#devin-ai" aria-label="Permalink to &quot;Devin AI&quot;">​</a></h1><ul><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="summary-of-product-tool-documents" tabindex="-1">Summary of Product Tool Documents <a class="header-anchor" href="#summary-of-product-tool-documents" aria-label="Permalink to &quot;Summary of Product Tool Documents&quot;">​</a></h2><p>The <code>Prompt.md</code> file in this directory defines the core system prompt for the AI software engineer named &quot;Devin&quot;. Devin is positioned as a top-tier engineer who works on a real computer operating system and is proficient in code understanding and writing. The prompt details Devin&#39;s working methods, coding best practices, information processing, and data security guidelines. Its core workflow is divided into two modes:</p><ul><li><strong>Planning Mode</strong>: In this mode, Devin&#39;s main task is to gather information, understand the codebase, clarify user requirements, and finally propose a confident plan through the <code>&lt;suggest_plan&gt;</code> command.</li><li><strong>Standard Mode</strong>: In this mode, Devin receives a plan and executes specific operations according to the plan&#39;s requirements.</li></ul><p>The prompt also provides an exhaustive command reference, defining all the tools available to Devin. These tools are invoked through specific XML tags (such as <code>&lt;shell&gt;</code>, <code>&lt;open_file&gt;</code>, <code>&lt;str_replace&gt;</code>, <code>&lt;find_filecontent&gt;</code>, <code>&lt;navigate_browser&gt;</code>, etc.), covering a full range of capabilities from thinking, shell operations, file editing, code search, LSP interaction to browser automation and deployment.</p>',6)])])}const h=o(a,[["render",r]]);export{u as __pageData,h as default};
