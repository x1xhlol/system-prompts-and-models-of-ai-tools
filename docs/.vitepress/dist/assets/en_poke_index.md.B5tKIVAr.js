import{_ as t,c as a,o,ae as s}from"./chunks/framework.CBTkueSR.js";const h=JSON.parse('{"title":"Poke","description":"","frontmatter":{},"headers":[],"relativePath":"en/poke/index.md","filePath":"en/poke/index.md"}'),i={name:"en/poke/index.md"};function n(r,e,l,d,c,m){return o(),a("div",null,[...e[0]||(e[0]=[s('<h1 id="poke" tabindex="-1">Poke <a class="header-anchor" href="#poke" aria-label="Permalink to &quot;Poke&quot;">​</a></h1><ul><li><a href="./Poke agent.html">Poke agent</a></li><li><a href="./Poke_p1.html">Poke_p1</a></li><li><a href="./Poke_p2.html">Poke_p2</a></li><li><a href="./Poke_p3.html">Poke_p3</a></li><li><a href="./Poke_p4.html">Poke_p4</a></li><li><a href="./Poke_p5.html">Poke_p5</a></li><li><a href="./Poke_p6.html">Poke_p6</a></li></ul><h2 id="summary-of-product-tool-documents" tabindex="-1">Summary of Product Tool Documents <a class="header-anchor" href="#summary-of-product-tool-documents" aria-label="Permalink to &quot;Summary of Product Tool Documents&quot;">​</a></h2><p>This directory contains the complete system prompts and behavioral guidelines designed for the AI assistant &quot;Poke&quot;. Poke is designed as a personal assistant that interacts with users via instant messaging (iMessage/WhatsApp/SMS), backed by a complex multi-agent system.</p><ul><li><p><strong><code>Poke agent.md</code></strong>: Defines the role and responsibilities of the backend agent as the &quot;execution engine&quot;. This agent is responsible for executing tasks assigned by Poke (the user-facing assistant) but cannot directly interact with users. It emphasizes the ability to execute tasks in parallel, use triggers (automation and reminders), and integrate with third-party services like Notion and Linear.</p></li><li><p><strong><code>Poke_p1.md</code> to <code>Poke_p6.md</code></strong>: These files are detailed system prompts for the main assistant Poke, elaborated in multiple parts:</p><ul><li><strong>P1 (Personality and Functions)</strong>: Defines Poke&#39;s identity as a brand ambassador, its enthusiastic and witty personality, adaptable communication style, and logic for handling different types of messages (user, agent, automation, etc.).</li><li><strong>P2 (Limitations and Strategies)</strong>: Explains WhatsApp&#39;s 24-hour message window limit, rules for interpreting emoji reactions, and strategies for collaborating with backend agents via the <code>sendmessageto_agent</code> tool.</li><li><strong>P3 (Error Handling and Drafts)</strong>: Specifies how to handle user dissatisfaction, how to silently cancel erroneous triggers, and how to confirm drafts with users via the <code>display_draft</code> tool before sending emails or calendar events.</li><li><strong>P4 (Integrations and Context)</strong>: Describes integrations with services like Notion and Linear, and defines the priority hierarchy of context when processing user requests. It also includes notes on Poke&#39;s brand background and security/privacy policies.</li><li><strong>P5 &amp; P6 (Protocols and Memory)</strong>: Details email link protocols, notification formats, and how the system automatically handles memory and long conversation summaries to maintain conversational continuity.</li></ul></li></ul><p>In summary, these documents collectively build a complex and human-like AI assistant system that works collaboratively through a user-facing &quot;Poke&quot; assistant with a distinct personality and a powerful backend execution agent, providing comprehensive personal assistant services to users.</p>',6)])])}const u=t(i,[["render",n]]);export{h as __pageData,u as default};
