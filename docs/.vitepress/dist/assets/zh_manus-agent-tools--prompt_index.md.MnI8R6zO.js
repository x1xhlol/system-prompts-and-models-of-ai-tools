import{_ as o,c as t,o as l,ae as d}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/manus-agent-tools--prompt/index.md","filePath":"zh/manus-agent-tools--prompt/index.md"}'),s={name:"zh/manus-agent-tools--prompt/index.md"};function a(r,e,n,c,i,_){return l(),t("div",null,[...e[0]||(e[0]=[d('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./Agent loop.html">Agent loop</a></li><li><a href="./Modules.html">Modules</a></li><li><a href="./Prompt.html">Prompt</a></li><li><a href="./tools.html">tools</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录包含了为AI代理 &quot;Manus&quot; 设计的完整系统提示、模块定义和工具集。Manus被定位为一个多才多艺的AI代理，擅长信息收集、数据处理、内容创作和软件开发等多种任务。</p><ul><li><p><strong><code>Prompt.md</code> 和 <code>Modules.md</code></strong>: 这两个文件共同定义了Manus的核心身份、能力和工作流程。它们描述了Manus如何在一个包含<code>Planner</code>（任务规划）、<code>Knowledge</code>（知识库）和<code>Datasource</code>（数据API）等模块的系统中运作。Manus通过分析事件流（用户消息、工具执行结果等）来迭代地完成任务，并强调了信息获取的优先级（API &gt; 网络搜索 &gt; 内部知识）。</p></li><li><p><strong><code>Agent loop.md</code></strong>: 此文件简要概括了Manus的核心代理循环：分析事件 -&gt; 选择工具 -&gt; 等待执行 -&gt; 迭代 -&gt; 提交结果 -&gt; 进入待机。这个循环是其自主完成任务的基础。</p></li><li><p><strong><code>tools.md</code></strong>: 以JSON格式详细定义了Manus可用的庞大工具集。这些工具赋予了Manus全面的操作能力，包括：</p><ul><li><strong>通信</strong>: <code>message_notify_user</code>, <code>message_ask_user</code></li><li><strong>文件系统</strong>: <code>file_read</code>, <code>file_write</code>, <code>file_find_by_name</code> 等</li><li><strong>Shell操作</strong>: <code>shell_exec</code>, <code>shell_view</code>, <code>shell_kill_process</code> 等</li><li><strong>浏览器交互</strong>: <code>browser_navigate</code>, <code>browser_click</code>, <code>browser_input</code>, <code>browser_console_exec</code> 等，提供了强大的网页自动化能力。</li><li><strong>信息与部署</strong>: <code>info_search_web</code>, <code>deploy_expose_port</code>, <code>deploy_apply_deployment</code></li></ul></li></ul><p>总而言之，这些文档共同描绘了一个高度模块化、工具驱动的通用AI代理。Manus通过其强大的工具集和结构化的代理循环，能够在沙箱环境中自主地、系统地完成从信息处理到软件部署的各类复杂任务。</p>',6)])])}const g=o(s,[["render",a]]);export{u as __pageData,g as default};
