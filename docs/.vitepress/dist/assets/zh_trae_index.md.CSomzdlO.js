import{_ as o,c as t,o as r,ae as a}from"./chunks/framework.CBTkueSR.js";const _=JSON.parse('{"title":"文档目录","description":"","frontmatter":{},"headers":[],"relativePath":"zh/trae/index.md","filePath":"zh/trae/index.md","lastUpdated":1760450691000}'),d={name:"zh/trae/index.md"};function l(i,e,c,n,s,u){return r(),t("div",null,[...e[0]||(e[0]=[a('<h1 id="文档目录" tabindex="-1">文档目录 <a class="header-anchor" href="#文档目录" aria-label="Permalink to &quot;文档目录&quot;">​</a></h1><ul><li><a href="./Builder Prompt.html">Builder Prompt</a></li><li><a href="./Builder Tools.html">Builder Tools</a></li><li><a href="./Chat Prompt.html">Chat Prompt</a></li></ul><h2 id="产品工具文档的综述" tabindex="-1">产品工具文档的综述 <a class="header-anchor" href="#产品工具文档的综述" aria-label="Permalink to &quot;产品工具文档的综述&quot;">​</a></h2><p>此目录包含了为 Trae AI 编程助手设计的核心系统提示和工具集，该助手被设计为在 Trae AI IDE 中运行的强大代理。其功能通过两种不同的模式来体现：</p><ul><li><p><strong>Builder 模式</strong>:</p><ul><li><strong><code>Builder Prompt.md</code></strong>: 这是 Builder 模式的核心系统提示，定义了AI助手在执行编码任务（如创建、修改、调试代码库）时的行为准则。它强调了代码更改、调试、外部API调用和沟通风格的最佳实践。</li><li><strong><code>Builder Tools.md</code></strong>: 以JSON格式详细定义了 Builder 模式下可用的所有工具。这包括任务管理 (<code>todo_write</code>)、代码搜索 (<code>search_codebase</code>)、文件操作（<code>write_to_file</code>, <code>update_file</code>）、命令执行 (<code>run_command</code>) 和网页搜索 (<code>web_search</code>) 等，为AI提供了全面的开发能力。</li></ul></li><li><p><strong>Chat 模式</strong>:</p><ul><li><strong><code>Chat Prompt.md</code></strong>: 定义了AI在与用户进行对话和问答时的行为规范。它侧重于理解用户意图，并决定是直接回答还是需要使用工具。此模式下的工具列表为空，表明其主要功能是对话而非直接操作。</li></ul></li></ul><p>总而言之，<code>trae</code> 目录通过这两种模式的定义，构建了一个既能作为强大开发代理（Builder Mode）又能作为智能对话伙伴（Chat Mode）的AI助手系统。</p>',6)])])}const p=o(d,[["render",l]]);export{_ as __pageData,p as default};
