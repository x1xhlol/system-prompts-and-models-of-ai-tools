import{_ as t,c as o,o as a,ae as s}from"./chunks/framework.CBTkueSR.js";const u=JSON.parse('{"title":"Bolt","description":"","frontmatter":{},"headers":[],"relativePath":"en/open-source-prompts/Bolt/index.md","filePath":"en/open-source-prompts/Bolt/index.md","lastUpdated":1760450691000}'),n={name:"en/open-source-prompts/Bolt/index.md"};function r(i,e,d,l,c,p){return a(),o("div",null,[...e[0]||(e[0]=[s('<h1 id="bolt" tabindex="-1">Bolt <a class="header-anchor" href="#bolt" aria-label="Permalink to &quot;Bolt&quot;">​</a></h1><ul><li><a href="./Prompt.html">Prompt</a></li></ul><h2 id="summary-of-product-tool-documents" tabindex="-1">Summary of Product Tool Documents <a class="header-anchor" href="#summary-of-product-tool-documents" aria-label="Permalink to &quot;Summary of Product Tool Documents&quot;">​</a></h2><p>The <code>Prompt.md</code> file in this directory defines the core system prompt for the AI assistant named &quot;Bolt&quot;. Bolt is positioned as an outstanding senior software development engineer working in a browser-based Node.js runtime environment called &quot;WebContainer&quot;. The prompt details the specific constraints of Bolt&#39;s environment, such as limited Python library support, no Git access, and a preference for Node.js scripts and Vite. It also specifies how Bolt creates comprehensive &quot;artifacts&quot; containing file operations and shell commands through specific XML tags like <code>&lt;boltArtifact&gt;</code> and <code>&lt;boltAction&gt;</code> to complete user development tasks. Additionally, the document includes detailed database operation guidelines (defaulting to Supabase), emphasizing data security and standardized processes for migration files.</p>',4)])])}const f=t(n,[["render",r]]);export{u as __pageData,f as default};
